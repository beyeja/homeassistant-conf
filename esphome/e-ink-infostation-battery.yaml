esphome:
  name: e-ink-infostation-battery
  friendly_name: E-Ink Infostation Battery
  includes:
    - functions/helpers.h
  on_boot: 
    then:
      - logger.log: "On Boot Event triggered"

# external_components:
#   # replace 1234 with the number of the Pull Request
#   - source: github://pr#4710
#     components:
#       # list all components modified by this Pull Request here
#       - online_image

# online_image:
#   - url: "https://upload.wikimedia.org/wikipedia/commons/3/33/Neighborhood_watch_bw.png"
#     id: dashboardCapture
#     on_error:
#       - logger.log: "Could not download the image"
#     type: BINARY
#     on_download_finished:
#       - component.update: displayComponent

esp32:
  board: lolin32

# Enable logging
logger:
  level: VERBOSE

# Enable Home Assistant API
api:
  encryption:

ota:
  password: !secret ota_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "E-Ink-Infostation"
    password: !secret wifi_ap_password

output:
  - platform: gpio
    pin: GPIO14
    inverted: True
    id: displayPrwPin

# deep_sleep: 
#   # run_duration: 120s
#   sleep_duration: 15min
#   id: deepSleepComponent

i2c:
  scan: False
  id: bus_a  
  # - sda: GPIO21
  # - scl: GPIO22

spi:
  - id: spiBus0
    clk_pin: GPIO18 # SCK # when to read data
    mosi_pin: GPIO23 # aka SDO (serial data out - send data)
    # miso_pin: # aka SDI (serial data in - receive data)  

sensor:
  - platform: wifi_signal
    name: "WiFi Signal"
    update_interval: 60s
    icon: mdi:wifi

  - platform: uptime
    name: "Uptime"
    update_interval: 60s
    icon: mdi:clock-outline

    # internal sensors
  - platform: homeassistant
    id: plant0060
    entity_id: sensor.plant_sensor_0060_moisture
    internal: true
  - platform: homeassistant
    id: plant0815
    entity_id: sensor.plant_sensor_0815_moisture
    internal: true
  - platform: homeassistant
    id: plant6c13
    entity_id: sensor.plant_sensor_6c13_moisture
    internal: true
  - platform: homeassistant
    id: plant6c26
    entity_id: sensor.plant_sensor_6c26_moisture
    internal: true
  - platform: homeassistant
    id: plant6c37
    entity_id: sensor.plant_sensor_6c37_moisture
    internal: true

  - platform: bme280
    i2c_id: bus_a  
    address: 0x76
    temperature:
      name: "BME280 Temperature"
      id: internalTemp
      accuracy_decimals: 1
      oversampling: 16x
    pressure:
      name: "BME280 Pressure"
      accuracy_decimals: 1
    humidity:
      name: "BME280 Humidity"
      id: internalHumidity
      accuracy_decimals: 1
    update_interval: 5s  

text_sensor:
  # weather infos
  - platform: homeassistant
    id: temp
    entity_id: sensor.esphome_weather_forecast
    attribute: temperature
    internal: true
    on_value: 
      then:
        - lambda: |-
            ESP_LOGD("main", "On Value triggered for temp sensor: %s", x.c_str());
        - component.update: displayComponent
        - lambda: |-
            ESP_LOGD("main", "Going to sleep in 5 seconds...");
        - delay: 5s
        # - deep_sleep.enter: 
        #     id: deepSleepComponent

  - platform: homeassistant
    id: weatherCondition
    entity_id: sensor.esphome_weather_forecast
    attribute: condition
    internal: true
  - platform: homeassistant
    id: rainProbab
    entity_id: sensor.esphome_weather_forecast
    attribute: precipitation_probability
    internal: true
    
  - platform: homeassistant
    id: tempDay1
    entity_id: sensor.esphome_weather_forecast
    attribute: day_1_temperature
    internal: true
  - platform: homeassistant
    id: weatherConditionDay1
    entity_id: sensor.esphome_weather_forecast
    attribute: day_1_condition
    internal: true
  - platform: homeassistant
    id: rainProbabDay1
    entity_id: sensor.esphome_weather_forecast
    attribute: day_1_precipitation_probability
    internal: true
  
  - platform: homeassistant
    id: tempDay2
    entity_id: sensor.esphome_weather_forecast
    attribute: day_2_temperature
    internal: true
  - platform: homeassistant
    id: weatherConditionDay2
    entity_id: sensor.esphome_weather_forecast
    attribute: day_2_condition
    internal: true
  - platform: homeassistant
    id: rainProbabDay2
    entity_id: sensor.esphome_weather_forecast
    attribute: day_2_precipitation_probability
    internal: true

  - platform: homeassistant
    id: tempLivingroom
    entity_id: sensor.plant_sensor_0060_temperature
    internal: true
  - platform: homeassistant
    id: tempBedroom
    entity_id: sensor.plant_sensor_6c13_temperature
    internal: true
  - platform: homeassistant
    id: tempBathroom
    entity_id: sensor.plant_sensor_6c26_temperature
    internal: true
  - platform: homeassistant
    id: tempBalcony
    entity_id: sensor.plant_sensor_0815_temperature
    internal: true

  # sunset and sunrise
  - platform: homeassistant
    id: nextSunSetString
    entity_id: sensor.esphome_next_sunset_as_string
    internal: true
  - platform: homeassistant
    id: nextSunRiseString
    entity_id: sensor.esphome_next_sunrise_as_string
    internal: true

font:
  # gfonts://family[@weight]
  - file: "fonts/VCR_OSD_MONO_1.001_21px.ttf"
    id: vcrMonoFont
    size: 21
  - file: "fonts/roundedsquare_22.ttf"
    id: roundedFont
    size: 22
  - file: "gfonts://Roboto@500"
    id: robotoFontSmall
    size: 25
  - file: "gfonts://Roboto@700"
    id: robotoFont25
    size: 27
  - file: "gfonts://Roboto@700"
    id: robotoFont33
    size: 36

image:
  - file: mdi:solar-panel-large
    id: icnSolarPanelXL
    resize: 30x30
    type: BINARY
  - file: mdi:water-thermometer-outline
    id: icnThermostatXL
    resize: 30x30
  - file: mdi:weather-sunset-down
    id: icnSunSet
    resize: 30x30
  - file: mdi:weather-sunset-up
    id: icnSunRise
    resize: 30x30
  - file: mdi:weather-pouring
    id: icnRainProbability
    resize: 30x30

  # forecast images large
  - file: mdi:weather-sunny
    id: icnSunnyXL
    resize: 225x225
  - file: mdi:weather-night
    id: icnClearNightXL
    resize: 225x225
  - file: mdi:weather-cloudy
    id: icnCloudyXL
    resize: 225x225
  - file: mdi:weather-rainy
    id: icnRainyXL
    resize: 225x225
  - file: mdi:weather-snowy-rainy
    id: icnSleetXL
    resize: 225x225
  - file: mdi:weather-snowy
    id: icnSnowXL
    resize: 225x225
  - file: mdi:weather-windy
    id: icnWindXL
    resize: 225x225
  - file: mdi:weather-fog
    id: icnFogXL
    resize: 225x225
  - file: mdi:weather-partly-cloudy
    id: icnPartlyCloudyXL
    resize: 225x225

  # forecast images small
  - file: mdi:weather-sunny
    id: icnSunnyMD
    resize: 125x125
  - file: mdi:weather-night
    id: icnClearNightMD
    resize: 125x125
  - file: mdi:weather-cloudy
    id: icnCloudyMD
    resize: 125x125
  - file: mdi:weather-rainy
    id: icnRainyMD
    resize: 125x125
  - file: mdi:weather-snowy-rainy
    id: icnSleetMD
    resize: 125x125
  - file: mdi:weather-snowy
    id: icnSnowMD
    resize: 125x125
  - file: mdi:weather-windy
    id: icnWindMD
    resize: 125x125
  - file: mdi:weather-fog
    id: icnFogMD
    resize: 125x125
  - file: mdi:weather-partly-cloudy
    id: icnPartlyCloudyMD
    resize: 125x125

    # plants
  - file: mdi:cactus
    id: icnCactus
    resize: 30x30
  - file: mdi:fruit-pineapple
    id: icnPineapple
    resize: 30x30
  - file: mdi:tree-outline
    id: icnTree
    resize: 30x30
  - file: mdi:sprout-outline
    id: icnSprout
    resize: 30x30
  - file: mdi:flower-tulip-outline
    id: icnFlower
    resize: 30x30

display:
  - platform: waveshare_epaper
    id: displayComponent
    model: 7.50in-bv3
    busy_pin: GPIO4
    reset_pin: GPIO3
    
    cs_pin: GPIO5 # chip select (SS) # when to listen for data
    dc_pin: GPIO1 # ?
    spi_id: spiBus0
    
    on_page_change: 
      then:
        - lambda: |-
            ESP_LOGD("main", "Display page change triggered");
      
    # full_update_every: 1
    update_interval: never # this is only initial value -> gets set to longer after first values loaded
    reset_duration: 2ms
    rotation: 270
    # auto_clear_enabled: true
    lambda: |-
      //display is 800x480
      int sX = 0;
      int sY = 25;
      int w = it.get_width() - sX;
      int h = it.get_height() - 25 - sY;
      int divMargin = 25;

      // for layout debugging
      layoutLines(it, sX, sY, w, h);

      // weather forecast today
      forecast(sX + 10, sY, forecastIcon(id(weatherCondition).state, true), 
              id(icnRainProbability), temp, rainProbab, it, id(robotoFont33));
      // weather forecast tomorrow
      forecast(sX + 315, sY, forecastIcon(id(weatherConditionDay1).state, false), 
              id(icnRainProbability), tempDay1, rainProbabDay1, it, id(robotoFont25));
      // weather forecast day after tomorrow
      forecast(sX + 315, sY + 175, forecastIcon(id(weatherConditionDay2).state, false), 
              id(icnRainProbability), tempDay2, rainProbabDay2, it, id(robotoFont25));
      
      // sunrise
      sunSetRise(sX + 10, sY + 325, id(icnSunRise), id(nextSunRiseString), it, id(robotoFontSmall));
      // sunset
      sunSetRise(sX + 150, sY + 325, id(icnSunSet), id(nextSunSetString), it, id(robotoFontSmall));
      
      int qH = 200;
      int q1X = sX;
      int q2X = (q2X + w) / 2;
      int q1Y = sY + 375;
      int q2Y = q1Y + qH / 2;
      // horizontal
      it.line(q1X + 10, q2Y, sX + w - 10, q2Y);
      // vertical
      it.line(q2X, q1Y + 10, q2X, q1Y + qH - 10);
      
      // temps rooms
      roomInfo(q1X + 10, q1Y + 10, 
              "Wohnzimmer", id(tempLivingroom), it, id(roundedFont), id(robotoFont25));
      roomInfo(q2X + 10, q1Y + 10, 
              "Balkon", id(tempBalcony), it, id(roundedFont), id(robotoFont25));
      roomInfo(q1X + 10, q2Y + 10, 
              "Bad", id(tempBathroom), it, id(roundedFont), id(robotoFont25));
      roomInfo(q2X + 10, q2Y + 10, 
              "Schlafzimmer", id(tempBedroom), it, id(roundedFont), id(robotoFont25));
      
      // plants
      plant(sX + 240, sY + 590, 
          id(plant0060).has_state() ? id(plant0060).state : -1, 
          id(icnCactus), it, id(vcrMonoFont));
      plant(sX + 290, sY + 590, 
          id(plant0815).has_state() ? id(plant0815).state : -1, 
          id(icnSprout), it, id(vcrMonoFont));
      plant(sX + 340, sY + 590, 
          id(plant6c13).has_state() ? id(plant6c13).state : -1, 
          id(icnPineapple), it, id(vcrMonoFont));
      plant(sX + 390, sY + 590, 
          id(plant6c26).has_state() ? id(plant6c26).state : -1, 
          id(icnTree), it, id(vcrMonoFont));
      plant(sX + 440, sY + 590, 
          id(plant6c37).has_state() ? id(plant6c37).state : -1, 
          id(icnFlower), it, id(vcrMonoFont));

captive_portal:
